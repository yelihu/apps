server:
  port: 8081

spring:
  application:
    name: app1
  # 数据库连接配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/application?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: ${DB_PASSWORD:}
    # 数据库初始化配置
    sql:
      init:
        mode: always
        schema-locations: classpath:db/schema.sql
        data-locations: classpath:db/data.sql
        continue-on-error: true
        encoding: UTF-8
    # Druid连接池配置
    druid:
      # 初始化连接数
      initial-size: 5
      # 最小连接数
      min-idle: 5
      # 最大连接数
      max-active: 20
      # 获取连接等待超时时间
      max-wait: 60000
      # 检测间隔时间(检测可以关闭的空闲连接)
      time-between-eviction-runs-millis: 60000
      # 连接最小生存时间
      min-evictable-idle-time-millis: 300000
      # 检测连接是否有效的SQL
      validation-query: SELECT 1
      # 申请连接时检测连接有效性
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # PSCache
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 监控过滤器配置
      filter:
        stat:
          enabled: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 2000
        wall:
          enabled: true
          db-type: mysql
      # 开启Web监控统计功能
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      # 开启StatViewServlet监控页面
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        login-username: admin
        login-password: ${DRUID_PASSWORD:admin}

# MyBatis-Plus配置
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  type-aliases-package: com.example.app1.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto
      table-underline: true

management:
  server:
    port: 8081
  endpoints:
    jmx:
      exposure:
        include: "*"
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# 配置common模块的HelloWorld服务
common:
  service:
    hello-world-enabled: true
    welcome-message: "来自App1的问候消息!"